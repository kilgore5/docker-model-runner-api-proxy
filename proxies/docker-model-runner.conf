#
# This is a reverse proxy configuration for Docker Model Runner
# so OpenWebUI can access the model runner API.
#
server {
  listen 8081;
  server_name _;

  # Default CORS headers for all responses
  add_header 'Access-Control-Allow-Origin' '*' always;
  add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
  add_header 'Access-Control-Allow-Headers' 'Origin,Content-Type,Accept,Authorization' always;

  # Add these global CORS headers for error responses
  error_page 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 421 422 423 424 425 426 428 429 431 451 500 501 502 503 504 505 506 507 508 510 511 = @error_cors;

  location @error_cors {
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'Origin,Content-Type,Accept,Authorization' always;
    return 502;
  }

  location /v1/ {
    # ── Preflight request handling ──
    if ($request_method = OPTIONS) {
      add_header 'Access-Control-Allow-Origin' '*' always;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
      add_header 'Access-Control-Allow-Headers' 'Origin,Content-Type,Accept,Authorization' always;
      add_header 'Content-Length' 0 always;
      add_header 'Content-Type' 'text/plain' always;
      return 204;
    }

    # ── Map /v1/... → /engines/llama.cpp/v1/... ──
    rewrite ^/v1/(.*)$ /engines/llama.cpp/v1/$1 break;

    # ── Proxy settings ──
    proxy_pass http://host.docker.internal:12434; # localhost:12434;
    proxy_http_version 1.1;

    # —— Remove upstream CORS headers ——
    proxy_hide_header Access-Control-Allow-Origin;
    proxy_hide_header Access-Control-Allow-Methods;
    proxy_hide_header Access-Control-Allow-Headers;

    # —— Add our own CORS headers ——
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'Origin,Content-Type,Accept,Authorization' always;

    # —— Streaming safety ——
    proxy_buffering off;
    proxy_request_buffering off;
    chunked_transfer_encoding on;
    proxy_set_header Connection "";

    # —— Timeouts ——
    proxy_read_timeout 3600s;
    client_body_timeout 3600s;
    client_max_body_size 0;

    # —— Forward only essential headers ——
    proxy_set_header Host $host;
    proxy_set_header Authorization $http_authorization;
    proxy_set_header Content-Type $http_content_type;
  }
}